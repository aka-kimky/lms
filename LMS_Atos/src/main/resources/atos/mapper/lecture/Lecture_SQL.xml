<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="atos.lms.lecture.service.dao.LectureDAO">


	<sql id="whereClause">
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="srcMainCode != null and srcMainCode !=''">
				AND CD.MAIN_CODE = #{srcMainCode}
			</if>
			
		    <if test="srcStartDate != null and srcStartDate != ''">
		        <![CDATA[
		        AND L.REC_START_DATE >= #{srcStartDate}
		        ]]>
		    </if>
		    <if test="srcEndDate != null and srcEndDate != ''">
		        <![CDATA[
		        AND L.REC_END_DATE <= #{srcEndDate}
		        ]]>
		    </if>
		    
		    <if test="srcLearnDate != null and srcLearnDate !=''">
		    	AND L.LEARN_DATE = #{srcLearnDate}
		    </if>
		
			<if test="searchCnd != null and searchCnd != ''">
				<if test="searchCnd == 0">
					AND I.NAME LIKE CONCAT ('%', #{searchWrd},'%') 		
				</if>
				<if test="searchCnd == 1">
					AND E.TITLE LIKE CONCAT ('%', #{searchWrd},'%') 		
				</if>
			</if>
			<if test="lectureMethod != null and lectureMethod !=''">
		    	AND LECTURE_METHOD = #{lectureMethod}
		    </if>
			
		</trim>
	</sql>
	
	<sql id="whereEdu">
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="srcMainCode != null and srcMainCode !=''">
				AND CD.MAIN_CODE = #{srcMainCode}
			</if>	
			<if test="searchCnd != null and searchCnd != ''">
				<if test="searchCnd == 0">
					AND E.TITLE LIKE CONCAT ('%', #{searchWrd},'%') 		
				</if>
				<if test="searchCnd == 1">
					AND E.TRAINING_TIME LIKE CONCAT ('%', #{searchWrd},'%') 		
				</if>
			</if>
		</trim>
	</sql>
	
	<sql id="whereIns">
		<where>
			<if test="lectureCode > 0">
				AND S.SCHEDULE_DATE = (SELECT LEARN_DATE FROM ATOS_LECTURE WHERE LECTURE_CODE = #{lectureCode})
			</if>
			<if test="searchCnd != null and searchCnd != ''">
	            <choose>
	                <when test="searchCnd == 0">
	                    AND I.ID LIKE CONCAT ('%', #{searchWrd},'%') 		
	                </when>
	                <when test="searchCnd == 1">
	                    AND I.NAME LIKE CONCAT ('%', #{searchWrd},'%') 		
	                </when>
	            </choose>
            </if>
			AND NOT EXISTS 
			(
				SELECT 1
				FROM ATOS_INSTRUCTOR_ASSIGNMENTS AIA
				WHERE AIA.INSTRUCTOR = I.ID 
			)
			AND STATUS = '4001'
		</where>
	</sql>
	
	
	<sql id="orderBy">
		<if test="sortField != null and sortField != ''">
			ORDER BY ${sortField} ${sortOrder}
		</if>
	</sql>
	
	
	<select id="selectLectureList" resultType="atos.lms.lecture.service.LectureVO">
		SELECT
		    L.LECTURE_CODE, L.EDUCATION, L.INSTRUCTOR, L.LOCATION, L.ATCH_FILE_ID,          
		    L.REC_START_DATE, L.REC_END_DATE, L.STATUS, L.LEARN_DATE, L.START_TIME,            
		    L.END_TIME, L.MANAGER, L.MANAGER_CONTACT, L.LECTURE_METHOD, L.CAPACITY,              
		    L.ENROLLED, L.REG_DATE, L.REGISTER,              
		    E.TITLE, E.CATEGORY, E.DESCRIPTION, E.OBJECTIVE,             
		    E.COMPLETION_CRITERIA, E.NOTE, E.TRAINING_TIME,         
		    CD.USE_YN, CM.MAIN_CODE, CM.MAIN_NAME,            
		    CS.SUB_NAME, CS.SUB_CODE,
		    I.NAME AS instructorName,
		CASE
            WHEN L.LEARN_DATE <![CDATA[>=]]> CURDATE() THEN '진행중'
            ELSE '종료'
        END AS learnStatus
		FROM ATOS_LECTURE L
		INNER JOIN ATOS_EDUCATION E 
			ON L.EDUCATION = E.EDU_CODE
		LEFT JOIN ATOS_INSTRUCTOR I
	   		ON L.INSTRUCTOR = I.ID 
		INNER JOIN ATOS_CATEGORY_DETAIL CD 
			ON E.CATEGORY = CD.CODE
		INNER JOIN ATOS_CATEGORY_MAIN CM 
			ON CD.MAIN_CODE = CM.MAIN_CODE
		INNER JOIN ATOS_CATEGORY_SUB CS 
			ON CD.SUB_CODE = CS.SUB_CODE AND CD.MAIN_CODE = CS.MAIN_CODE
		<include refid="whereClause" />
		<include refid="orderBy" />		
		LIMIT #{recordCountPerPage} OFFSET #{firstIndex}	
	</select>
	
	<select id="selectLectureListCnt" resultType="java.lang.Integer"> 
		SELECT
		    COUNT(L.LECTURE_CODE)            
		FROM ATOS_LECTURE L
		INNER JOIN ATOS_EDUCATION E 
			ON L.EDUCATION = E.EDU_CODE
		INNER JOIN ATOS_CATEGORY_DETAIL CD 
			ON E.CATEGORY = CD.CODE
		INNER JOIN ATOS_CATEGORY_MAIN CM 
			ON CD.MAIN_CODE = CM.MAIN_CODE
		INNER JOIN ATOS_CATEGORY_SUB CS 
			ON CD.SUB_CODE = CS.SUB_CODE AND CD.MAIN_CODE = CS.MAIN_CODE
		<include refid="whereClause" />
	</select>
	
	<select id="selectEducationList" resultType="atos.lms.lecture.service.LectureVO">
		SELECT 
			E.EDU_CODE, E.TITLE, E.CATEGORY, E.DESCRIPTION, E.OBJECTIVE,             
		    E.COMPLETION_CRITERIA, E.NOTE, E.TRAINING_TIME, E.STATUS AS eStatus,
		    CD.USE_YN, CM.MAIN_CODE, CM.MAIN_NAME,            
		    CS.SUB_NAME, CS.SUB_CODE
		FROM ATOS_EDUCATION E
		INNER JOIN
		ATOS_CATEGORY_DETAIL CD
			ON E.CATEGORY = CD.CODE
		INNER JOIN 
		ATOS_CATEGORY_MAIN CM
			ON CD.MAIN_CODE = CM.MAIN_CODE
		INNER JOIN 
		ATOS_CATEGORY_SUB CS
			ON CD.SUB_CODE = CS.SUB_CODE AND CD.MAIN_CODE = CS.MAIN_CODE
		<include refid="whereEdu" />
		<include refid="orderBy" />
		LIMIT #{recordCountPerPage} OFFSET #{firstIndex} 
	
	</select>
	
	<select id="selectEducationListCnt" resultType="java.lang.Integer">
		SELECT 
			COUNT(E.EDU_CODE)
		FROM ATOS_EDUCATION E
		INNER JOIN
		ATOS_CATEGORY_DETAIL CD
			ON E.CATEGORY = CD.CODE
		INNER JOIN 
		ATOS_CATEGORY_MAIN CM
			ON CD.MAIN_CODE = CM.MAIN_CODE
		INNER JOIN 
		ATOS_CATEGORY_SUB CS
			ON CD.SUB_CODE = CS.SUB_CODE AND CD.MAIN_CODE = CS.MAIN_CODE
		<include refid="whereEdu" />
	</select>
	
	<select id="selectInstructorList" resultType="atos.lms.lecture.service.LectureInsDTO">
		SELECT 
			I.ID, I.NAME AS instructorName, 
			I.PHONE_NO, I.EMAIL, I.DEPARTMENT, I.POSITION
		FROM ATOS_INSTRUCTOR I
		INNER JOIN 
		ATOS_INSTRUCTOR_SCHEDULE S
			ON I.ID = S.ID
		<include refid="whereIns" />
		<include refid="orderBy" />		
	</select>
	
	<select id="selectLectureKey" resultType="atos.lms.lecture.service.LectureVO">
		SELECT
		    L.LECTURE_CODE, L.EDUCATION, L.INSTRUCTOR, L.LOCATION, L.LOCATION_DETAIL, L.ATCH_FILE_ID,          
		    L.REC_START_DATE, L.REC_END_DATE, L.STATUS, L.LEARN_DATE, L.START_TIME,            
		    L.END_TIME, L.MANAGER, L.MANAGER_CONTACT, L.LECTURE_METHOD, L.CAPACITY,              
		    L.ENROLLED, L.REG_DATE, L.REGISTER,              
		    E.TITLE, E.CATEGORY, E.DESCRIPTION, E.OBJECTIVE,             
		    E.COMPLETION_CRITERIA, E.NOTE, E.TRAINING_TIME,         
		    CD.USE_YN, CM.MAIN_CODE, CM.MAIN_NAME,            
		    CS.SUB_NAME, CS.SUB_CODE,
		    I.NAME AS instructorName              
		FROM ATOS_LECTURE L
		INNER JOIN ATOS_EDUCATION E 
			ON L.EDUCATION = E.EDU_CODE
		LEFT JOIN ATOS_INSTRUCTOR I
	   		ON L.INSTRUCTOR = I.ID 
		INNER JOIN ATOS_CATEGORY_DETAIL CD 
			ON E.CATEGORY = CD.CODE
		INNER JOIN ATOS_CATEGORY_MAIN CM 
			ON CD.MAIN_CODE = CM.MAIN_CODE
		INNER JOIN ATOS_CATEGORY_SUB CS 
			ON CD.SUB_CODE = CS.SUB_CODE AND CD.MAIN_CODE = CS.MAIN_CODE
		WHERE L.LECTURE_CODE = #{lectureCode}
	</select>
	
	<insert id="insertLecture">
		INSERT INTO ATOS_LECTURE
			(
				EDUCATION, LOCATION, LOCATION_DETAIL, 
				ATCH_FILE_ID, REC_START_DATE, REC_END_DATE, 
				LEARN_DATE, START_TIME, END_TIME,
				MANAGER, MANAGER_CONTACT, CAPACITY
			)
		VALUES
			(
				#{education}, #{location}, #{locationDetail},
				#{atchFileId}, #{recStartDate}, #{recEndDate},
				#{learnDate}, #{startTime}, #{endTime},
				#{manager}, #{managerContact}, #{capacity}
			)
	</insert>
	
	<update id="updateLecture">
		UPDATE ATOS_LECTURE
		SET
			EDUCATION = #{education},
			LOCATION = #{location},
			LOCATION_DETAIL = #{locationDetail},
			REC_START_DATE = #{recStartDate},
			REC_END_DATE = #{recEndDate},
			LEARN_DATE = #{learnDate},
			START_TIME = #{startTime},
			END_TIME = #{endTime},
			MANAGER = #{manager},
			MANAGER_CONTACT = #{managerContact},
			CAPACITY = #{capacity}
		WHERE = LECTURE_CODE = #{lectureCode}
	</update>
	
	
	<update id="updateLectureInstructor">
		UPDATE ATOS_LECTURE
		SET
			INSTRUCTOR = #{id}
		WHERE LECTURE_CODE = #{lectureCode}
	</update>
	
	<insert id="insertInstructor">
		INSERT INTO ATOS_INSTRUCTOR_ASSIGNMENTS
			(INSTRUCTOR, LECTURE_CODE)
		VALUES
			(#{id}, #{lectureCode})
	</insert>
	
	<update id="updateInstructor">
		UPDATE ATOS_INSTRUCTOR_ASSIGNMENTS
		SET
			INSTRUCTOR = #{id}
		WHERE LECTURE_CODE = #{lectureCode}
	</update>
	
	<delete id="deleteInstructor">
		DELETE FROM ATOS_INSTRUCTOR_ASSIGNMENTS
		WHERE LECTURE_CODE = #{lectureCode}
	</delete>
	
</mapper>